class Table {
  constructor(options = {}) {
    this.head = options.head || [];
    this.rows = [];
  }
  push(...rows) {
    this.rows.push(...rows);
  }
  toString() {
    const rows = [this.head, ...this.rows];
    const widths = [];
    rows.forEach(r => {
      r.forEach((cell, i) => {
        const len = String(cell).length;
        widths[i] = Math.max(widths[i] || 0, len);
      });
    });
    const format = row =>
      '| ' + row.map((c, i) => String(c).padEnd(widths[i], ' ')).join(' | ') + ' |';
    const line = '+' + widths.map(w => '-'.repeat(w + 2)).join('+') + '+';
    return [line, format(rows[0]), line, ...this.rows.map(format), line].join('\n');
  }
}
module.exports = Table;
